<style type="text/css" media="screen">
/*
.nodes-image {
	margin:-100;
}
*/	
@import url("//maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css");

.imageblock .content img, .image img {max-width: 100%;}
.deck h3, .deck h4 {display: block !important;margin-bottom:8px;margin-top:5px;}
.listingblock {margin:8px;}
.pull-bottom {position:relative;bottom:1em;}
.admonitionblock td.icon [class^="fa icon-"]{font-size:2.5em;text-shadow:1px 1px 2px rgba(0,0,0,.5);cursor:default}
.admonitionblock td.icon .icon-note:before{content:"\f05a";color:#19407c}
.admonitionblock td.icon .icon-tip:before{content:"\f0eb";text-shadow:1px 1px 2px rgba(155,155,0,.8);color:#111}
.admonitionblock td.icon .icon-warning:before{content:"\f071";color:#bf6900}
.admonitionblock td.icon .icon-caution:before{content:"\f06d";color:#bf3400}
.admonitionblock td.icon .icon-important:before{content:"\f06a";color:#bf0000}
.admonitionblock.note.speaker { display:none; }
</style>
<style type="text/css" media="screen">
/* #editor.maximize-editor .CodeMirror-code { font-size:24px; line-height:26px; } */
</style>
<article class="guide" ng-controller="AdLibDataController">
  <carousel class="deck container-fluid">
    <!--slide class="row-fluid">
      <div class="col-sm-3">
        <h3>Exploring Stackoverflow</h3>
        <p class="lead">Information</p>
			<!dl>
				
				
				
				
				
			</dl>
		</div>
      <div class="col-sm-9">
        <figure>
          <img style="width:300px" src=""/>
        </figure>
      </div>
    </slide-->
    


<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Exploring Stackoverflow</h3>
    <br/>
    <div>
      <div class="imageblock" style="float: right;">
<div class="content">
<img src="https://guides.neo4j.com/sandbox/stackoverflow/img/so_logo.svg" alt="so logo" width="200px">
</div>
</div>
<div class="paragraph">
<p>Every developer has a tab open <a href="https://stackoverflow.com/" target="_blank">Stack Overflow</a>, the massively popular question-and-answer site. This dataset explores users, questions, answers, comments, and tags related to the <code>neo4j</code>- and <code>cypher</code>- tagged questions on Stack Overflow.</p>
</div>
<div class="paragraph">
<p>This guide will show you how to:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Create: load questions, answers, comments, tags, and users into the graph</p>
</li>
<li>
<p>Find: Find unanswered questions</p>
</li>
<li>
<p>Query: discover the most engaged users and most popular questions</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Throughout the guide you&#8217;ll find Cypher statements that you can execute, by clicking on them and then executing them by hitting the run button.</p>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>The Model</h3>
    <br/>
    <div>
      <div class="imageblock">
<div class="content">
<img src="https://guides.neo4j.com/sandbox/stackoverflow/img/model.svg" alt="model" width="100%">
</div>
</div>



   <h4>Nodes</h4>
   <div class="paragraph">
<p>We model the <code>Users</code>, <code>Questions</code>, <code>Answers</code>, <code>Comments</code>, and <code>Tags</code> as nodes.</p>
</div>



   <h4>Relationships</h4>
   <div class="paragraph">
<p>Users ask questions, comment, and provide answers.</p>
</div>
<div class="paragraph">
<p><code>(:User)-[:ASKED]&#8594;(:Question)</code>
<code>(:User)-[:COMMENTED]&#8594;(:Comment)</code>
<code>(:User)-[:PROVIDED]&#8594;(:Answer)</code></p>
</div>
<div class="paragraph">
<p>Answers attempt to answer questions, comments are made on questions, and questions are associated with tags.</p>
</div>
<div class="paragraph">
<p><code>(:Answer)-[:ANSWERED]&#8594;(:Question)</code>
<code>(:Comment)-[:COMMENTED_ON]&#8594;(:Question)</code>
<code>(:Question)-[:TAGGED]&#8594;(:Tag)</code></p>
</div>
<div class="paragraph">
<p>If you want to see it yourself, run:</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->CALL db.schema.visualization;<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Load JSON Import</h3>
    <br/>
    <div>
      <div class="paragraph">
<p>There is already data preloaded in this graph, if you want to extend (more pages or other tags) or update it with the most recent questions, please modify and run the statement below.</p>
</div>
<div class="paragraph">
<p>Update this dataset using <code>apoc.load.json</code>. Run the query as-is to update or add a tag to the <code>tags</code> array to extend.</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->// look for several pages of questions
WITH ["neo4j","cypher"] as tags
UNWIND tags as tagName
UNWIND range(1,2) as page

WITH "https://api.stackexchange.com/2.3/questions?page="+page+"&amp;pagesize=25&amp;order=desc&amp;sort=creation&amp;tagged="+tagName+"&amp;site=stackoverflow&amp;filter=!5-i6Zw8Y)4W7vpy91PMYsKM-k9yzEsSC1_Uxlf" as url

CALL apoc.load.json(url) YIELD value
CALL apoc.util.sleep(250)  // careful with throttling

UNWIND value.items AS q

// create the questions
MERGE (question:Question {uuid:q.question_id})
  ON CREATE SET question.title = q.title,
  	question.link = q.share_link,
  	question.creation_date = q.creation_date,
  	question.accepted_answer_id=q.accepted_answer_id,
  	question.view_count=q.view_count,
   	question.answer_count=q.answer_count,
   	question.body_markdown=q.body_markdown

// who asked the question
MERGE (owner:User {uuid:coalesce(q.owner.user_id,'deleted')})
  ON CREATE SET owner.display_name = q.owner.display_name
MERGE (owner)-[:ASKED]-&gt;(question)

// what tags do the questions have
FOREACH (tagName IN q.tags |
  MERGE (tag:Tag {name:tagName})
    ON CREATE SET tag.link = "https://stackoverflow.com/questions/tagged/" + tag.name
  MERGE (question)-[:TAGGED]-&gt;(tag))

// who answered the questions?
FOREACH (a IN q.answers |
   MERGE (question)&lt;-[:ANSWERED]-(answer:Answer {uuid:a.answer_id})
    ON CREATE SET answer.is_accepted = a.is_accepted,
    answer.link=a.share_link,
    answer.title=a.title,
    answer.body_markdown=a.body_markdown,
    answer.score=a.score,
   	answer.favorite_score=a.favorite_score,
   	answer.view_count=a.view_count
   MERGE (answerer:User {uuid:coalesce(a.owner.user_id,'deleted')})
    ON CREATE SET answerer.display_name = a.owner.display_name
   MERGE (answer)&lt;-[:PROVIDED]-(answerer)
)

// who commented ont he question
FOREACH (c in q.comments |
  MERGE (question)&lt;-[:COMMENTED_ON]-(comment:Comment {uuid:c.comment_id})
    ON CREATE SET comment.link=c.link, comment.score=c.score
  MERGE (commenter:User {uuid:coalesce(c.owner.user_id,'deleted')})
    ON CREATE SET commenter.display_name = c.owner.display_name
  MERGE (comment)&lt;-[:COMMENTED]-(commenter)
);<!--/code--></pre>
</div>
</div>
<div class="paragraph">
<p>Read More: <a href="https://neo4j.com/labs/apoc/4.1/import/load-json/#load-json-examples-stackoverflow" target="_blank">Import from StackOverflow API</a></p>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Basic Queries</h3>
    <br/>
    <div>
      <div class="paragraph">
<p>Labels in the graph and counts for each:</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (n)
RETURN labels(n) as label, count(*) as freq
ORDER BY freq DESC;<!--/code--></pre>
</div>
</div>
<div class="paragraph">
<p>Relationship-types in the graph and counts for eachabel:</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH ()-[r]-&gt;()
RETURN type(r) as type, count(*) as freq
ORDER BY freq DESC;<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Top Tags</h3>
    <br/>
    <div>
      <div class="paragraph">
<p>Which are the most popular tags?</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (q:Question)-[:TAGGED]-&gt;(t:Tag)
RETURN t.name,  count(q) AS questions
ORDER BY questions DESC
LIMIT 5;<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Exploring Users</h3>
    <br/>
    <div>
      <div class="paragraph">
<p>Who are the top users asking questions?</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (u:User)-[:ASKED]-&gt;(q:Question)
RETURN u.display_name, count(*) AS questions
ORDER by questions DESC
LIMIT 10;<!--/code--></pre>
</div>
</div>
<div class="paragraph">
<p>Who&#8217;s answering?</p>
</div>
<div class="paragraph">
<p>Ordered by number of answers</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (u:User)-[:PROVIDED]-&gt;(a:Answer)-[:ANSWERED]-&gt;(q:Question)
RETURN u.display_name as user,COUNT(a) AS answers, avg(a.score) as avg_score
ORDER BY answers DESC LIMIT 10;<!--/code--></pre>
</div>
</div>
<div class="paragraph">
<p>Ordered by max score, filtered for a particular tag</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (u:User)-[:PROVIDED]-&gt;(a:Answer)-[:ANSWERED]-&gt;
      (q:Question)-[:TAGGED]-&gt;(:Tag {name:"cypher"})
RETURN u.display_name as user,COUNT(a) AS answers, max(a.score) as max_score
ORDER BY max_score DESC LIMIT 10;<!--/code--></pre>
</div>
</div>
<div class="paragraph">
<p>What&#8217;s the shortest path between users?</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH path = allShortestPaths(
  (u1:User {display_name:"alexanoid"})-[*]-(u2:User {display_name:"InverseFalcon"})
)
RETURN path LIMIT 1;<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>User Engagement</h3>
    <br/>
    <div>
      <div class="paragraph">
<p>User engagement over time:</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (u:User)-[:PROVIDED]-&gt;()-[:ANSWERED]-&gt;
      (q:Question)-[:TAGGED]-&gt;(t:Tag)
WHERE u.display_name = "InverseFalcon"
RETURN apoc.date.format(q.creation_date,'s','yyyy-MM') as month,
       count(distinct q) as count, collect(distinct t.name) as tags
ORDER BY month asc<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Unanswered Questions</h3>
    <br/>
    <div>
      <div class="paragraph">
<p>What are the tags for unanswered questions?</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (q:Question)-[:TAGGED]-&gt;(t:Tag)
WHERE NOT t.name IN ['neo4j','cypher']
  AND NOT (q)&lt;-[:ANSWERED]-()
RETURN t.name as tag, count(q) AS questions
ORDER BY questions DESC LIMIT 10;<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>How are tags related to other tags?</h3>
    <br/>
    <div>
      <div class="paragraph">
<p>Tag correlations:</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (t1:Tag)&lt;-[:TAGGED]-()-[:TAGGED]-&gt;(t2:Tag)
WHERE id(t1) &lt; id(t2) and t1.name &lt;&gt; 'neo4j' and t2.name &lt;&gt; 'neo4j'
RETURN t1.name, t2.name,count(*) as freq
ORDER BY freq desc LIMIT 10;<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Virtual Graphs: Tags</h3>
    <br/>
    <div>
      <div class="paragraph">
<p>Project tags via co-occurrence with virtual relationships.</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (t1:Tag)&lt;-[:TAGGED]-()-[:TAGGED]-&gt;(t2:Tag)
WHERE id(t1) &lt; id(t2) and t1.name &lt;&gt; 'neo4j' and t2.name &lt;&gt; 'neo4j'
WITH t1, t2,count(*) as freq  where freq &gt; 3
RETURN t1,t2, apoc.create.vRelationship(t1,'OCCURRED',{freq:freq},t2) as rel<!--/code--></pre>
</div>
</div>
<div class="paragraph">
<p>If you want to you can also materialize those relationships in the graph and then explore the data in Browser or Bloom visually forming clusters.</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH (t1:Tag)&lt;-[:TAGGED]-()-[:TAGGED]-&gt;(t2:Tag)
WHERE id(t1) &lt; id(t2) and t1.name &lt;&gt; 'neo4j' and t2.name &lt;&gt; 'neo4j'
WITH t1, t2,count(*) as freq  where freq &gt; 3
MERGE (t1)-[r:OCCURRED]-(t2) SET r.freq=freq
RETURN count(*)<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Virtual Graphs: Social Network</h3>
    <br/>
    <div>
      <div class="paragraph">
<p>We can do something similar for commenters - what users keep on running into each other in the comments?</p>
</div>
<div class="listingblock">
<div class="content">
<pre mode="cypher"  class="highlight pre-scrollable programlisting cm-s-neo code runnable standalone-example ng-binding" data-lang="cypher" lang="cypher"><!--code class="cypher language-cypher"-->MATCH p1=(u1:User)-[:COMMENTED]-&gt;(c1:Comment)-[:COMMENTED_ON]-(q:Question)
MATCH p2=(u2:User)-[:COMMENTED]-&gt;(c2:Comment)-[:COMMENTED_ON]-(q)
WHERE id(u1) &lt; id(u2)
WITH u1, u2, count(distinct q) as freq
WHERE freq &gt; 2
RETURN u1, u2, apoc.create.vRelationship(u1,'OCCURRED',{freq:freq},u2) as rel<!--/code--></pre>
</div>
</div>
	</div>
  </div>
</slide>



<slide class="row-fluid">
  <div class="col-sm-12">
    <h3>Further Reading</h3>
    <br/>
    <div>
      <div class="ulist">
<ul>
<li>
<p><a href="https://neo4j.com/labs/apoc/4.1/import/load-json/#load-json-examples-stackoverflow" target="_blank">Import from StackOverflow API</a></p>
</li>
<li>
<p><a href="https://neo4j.com/videos/exploring-stackoverflow-data-with-michael-hunger-twitch-stream/" target="_blank">Exploring StackOverflow data with Michael Hunger – Twitch stream</a></p>
</li>
<li>
<p><a href="https://neo4j.com/blog/import-10m-stack-overflow-questions/" target="_blank">Import 10M Stack Overflow Questionsinto Neo4j In Just 3 Minutes</a></p>
</li>
</ul>
</div>
	</div>
  </div>
</slide>
  </carousel>
</article>